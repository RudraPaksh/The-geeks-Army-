# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-11 22:20
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='location')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('bdate', models.DateField(blank=True, null=True, verbose_name='birthday date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Participants',
                'verbose_name': 'Participant',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('location', models.CharField(max_length=200, verbose_name='location')),
                ('description', ckeditor.fields.RichTextField()),
                ('date', models.DateField(verbose_name='event date')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('organizers', models.ManyToManyField(related_name='organized_events', to=settings.AUTH_USER_MODEL, verbose_name='organizers')),
            ],
            options={
                'ordering': ['-date_added'],
                'verbose_name_plural': 'Events',
                'verbose_name': 'Event',
            },
        ),
        migrations.CreateModel(
            name='Participation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(choices=[(0, 'No, thanks'), (1, 'I may attend'), (2, "I'll be there")], verbose_name='participation status')),
                ('date_registered', models.DateTimeField(auto_now_add=True, verbose_name='date registered')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_participation', to='events.Event', verbose_name='event')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_participation', to=settings.AUTH_USER_MODEL, verbose_name='person')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(related_name='in_events', through='events.Participation', to=settings.AUTH_USER_MODEL, verbose_name='participants'),
        ),
    ]
